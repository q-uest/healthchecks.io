# Default values for healtcheck.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: docker.io/healthchecks/healthchecks
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v2.10"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

configmap: hc-env-cm

envvars:
  ALLOWED_HOSTS: 52.201.233.203
  APPRISE_ENABLED: "False"
  DB: postgres
  DB_CONN_MAX_AGE: "0"
  DB_HOST: postgresdb
  DB_NAME: hc
  DB_PASSWORD: password
  DB_PORT: "5432"
  DB_SSLMODE: prefer
  DB_TARGET_SESSION_ATTRS: read-write
  DB_USER: postgres
  DEBUG: "False"
  DEFAULT_FROM_EMAIL: healthchecks@example.org
  DISCORD_CLIENT_ID: ""
  DISCORD_CLIENT_SECRET: ""
  EMAIL_HOST: ""
  EMAIL_HOST_PASSWORD: ""
  EMAIL_HOST_USER: ""
  EMAIL_PORT: "587"
  EMAIL_USE_TLS: "True"
  EMAIL_USE_VERIFICATION: "True"
  INTEGRATIONS_ALLOW_PRIVATE_IPS: "False"
  LINENOTIFY_CLIENT_ID: ""
  LINENOTIFY_CLIENT_SECRET: ""
  MASTER_BADGE_LABEL: Mychecks
  MATRIX_ACCESS_TOKEN: ""
  MATRIX_HOMESERVER: ""
  MATRIX_USER_ID: ""
  MATTERMOST_ENABLED: "True"
  MSTEAMS_ENABLED: "True"
  OPSGENIE_ENABLED: "True"
  PAGERTREE_ENABLED: "True"
  PD_APP_ID: ""
  PD_ENABLED: "True"
  PING_BODY_LIMIT: "10000"
  PING_EMAIL_DOMAIN: localhost
  PING_ENDPOINT: http://localhost:8000/ping/
  PROMETHEUS_ENABLED: "True"
  PUSHBULLET_CLIENT_ID: ""
  PUSHBULLET_CLIENT_SECRET: ""
  PUSHOVER_API_TOKEN: ""
  PUSHOVER_EMERGENCY_EXPIRATION: "86400"
  PUSHOVER_EMERGENCY_RETRY_DELAY: "300"
  PUSHOVER_SUBSCRIPTION_URL: ""
  REGISTRATION_OPEN: "True"
  REMOTE_USER_HEADER: ""
  ROCKETCHAT_ENABLED: "True"
  RP_ID: ""
  S3_ACCESS_KEY: ""
  S3_BUCKET: ""
  S3_ENDPOINT: ""
  S3_REGION: ""
  S3_SECRET_KEY: ""
  S3_TIMEOUT: "60"
  SECRET_KEY: '---'
  SHELL_ENABLED: "False"
  SIGNAL_CLI_SOCKET: ""
  SITE_LOGO_URL: ""
  SITE_NAME: Mychecks
  SITE_ROOT: http://localhost:8000
  SLACK_CLIENT_ID: ""
  SLACK_CLIENT_SECRET: ""
  SLACK_ENABLED: "True"
  SPIKE_ENABLED: "True"
  TELEGRAM_BOT_NAME: ExampleBot
  TELEGRAM_TOKEN: ""
  TRELLO_APP_KEY: ""
  TWILIO_ACCOUNT: ""
  TWILIO_AUTH: ""
  TWILIO_FROM: ""
  TWILIO_USE_WHATSAPP: "False"
  USE_PAYMENTS: "False"
  VICTOROPS_ENABLED: "True"
  WEBHOOKS_ENABLED: "True"
  ZULIP_ENABLED: "True"
